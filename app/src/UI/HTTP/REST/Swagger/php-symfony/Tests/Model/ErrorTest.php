<?php
/**
 * ErrorTest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  App\UI\HTTP\REST\Tests\Model
 * @author   openapi-generator contributors
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * API REST Todo - OpenAPI 3.0
 *
 * Spec API pour le projet Todo.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */

namespace App\UI\HTTP\REST\Tests\Model;

use App\UI\HTTP\REST\Model\Error;
use PHPUnit\Framework\MockObject\MockObject;
use PHPUnit\Framework\TestCase;

/**
 * ErrorTest Class Doc Comment
 *
 * @category    Class
 * @description Error
 * @package     App\UI\HTTP\REST\Tests\Model
 * @author      openapi-generator contributors
 * @link        https://github.com/openapitools/openapi-generator
 * @coversDefaultClass \App\UI\HTTP\REST\Model\Error
 */
class ErrorTest extends TestCase
{
    protected Error|MockObject $object;

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
        $this->object = $this->getMockBuilder(Error::class)->getMockForAbstractClass();
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * @group integration
     * @small
     */
    public function testTestClassExists(): void
    {
        $this->assertTrue(class_exists(Error::class));
        $this->assertInstanceOf(Error::class, $this->object);
    }

    /**
     * Test attribute "code"
     *
     * @group unit
     * @small
     */
    public function testPropertyCode(): void
    {
        $this->markTestSkipped('Test for property code not implemented');
    }

    /**
     * Test attribute "message"
     *
     * @group unit
     * @small
     */
    public function testPropertyMessage(): void
    {
        $this->markTestSkipped('Test for property message not implemented');
    }
}
